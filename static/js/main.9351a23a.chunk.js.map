{"version":3,"sources":["logo.svg","data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","Detail","useState","alert","alert변경","누른탭변경","스위치","타이머","setTimeout","clearTimeout","useParams","찾은상품","shoes","find","상품","history","useHistory","className","src","width","onClick","재고변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","connect","state","Table","responsive","name","quan","재고context","React","createContext","Card","useContext","i","App","Data","shoes변경","isLoading","isLoading변경","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","as","to","NavDropdown","href","Divider","exact","path","Jumbotron","Button","Provider","value","map","shoe","axios","get","then","result","data","catch","console","log","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9351a23a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\nexport default[\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n] ","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n//useHistory라는 Hock을 사용하는 방법으로 뒤로가기를 구현\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { CSSTransition } from \"react-transition-group\";\n\n// 컴포넌트에 직접 스타일 넣어서 스타일링 하기!\n// 클래스네임을 작성할 필요가 없음\nlet 박스 = styled.div`\n    padding:20px;\n`;\n\nlet 제목 = styled.h4`\n    font-size:25px;\n    color : ${ props => props.색상 }\n`;\n\nfunction Detail(props){\n\n    let [alert, alert변경] = useState(true);\n    let [inputData, inputData변경] = useState('');\n\n    let [누른탭, 누른탭변경] = useState(0);\n    let [스위치, 스위치변경] = useState(false);\n\n    // 훅! 업데이트마다 실행된다\n    useEffect(()=>{\n        let 타이머 = setTimeout(() => {\n            alert변경(false)\n        }, 2000);\n        return ()=>{ clearTimeout(타이머) } //Detail컴포넌트가 사라질때 타이머를 제거한다\n    },[]); //대괄호 안에 조건을 넣어줌\n\n\n    // 라우터의 useParams훅! => 사용자가 입력한 URL파라미터들!\n    // /:id자리에 사용자가 입력한 값이 들어감 \n    let { id } = useParams();\n    let 찾은상품 = props.shoes.find(function(상품){\n        return 상품.id == id;\n    })\n    // 방문기록을 담고있는 Object이다\n    let history = useHistory();\n\n    return (\n        <div className=\"container\">\n            <박스>\n                <제목 className=\"red\">Detail</제목>\n            </박스>\n\n            {\n                alert === true \n                ? (<div className=\"my-alert2\">\n                <p>재고가 얼마 남지 않았습니다.</p>\n                </div>) : null\n            }\n            \n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <img src={ 'https://codingapple1.github.io/shop/shoes' + (찾은상품.id+1) +'.jpg' } width=\"100%\" />\n                </div>\n                <div className=\"col-md-6 mt-4\">\n                    <h4 className=\"pt-5\">{찾은상품.title}</h4>\n                    <p>{찾은상품.content}</p>\n                    <p>{찾은상품.price}</p>\n                    \n                    <Info 재고={props.재고}></Info>\n\n                    <button className=\"btn btn-danger\" onClick={()=>{\n                        props.재고변경([9,10,11]);\n                    }}>주문하기</button>\n                    &nbsp; \n                    <button className=\"btn btn-danger\" onClick={()=>{\n                        history.goBack();\n                    }}>뒤로가기</button> \n                    <br/><br/><br/>\n                </div>\n            </div>\n\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n            <Nav.Item>\n                <Nav.Link eventKey=\"link-0\" onClick={()=>{\n                    누른탭변경(0);\n                    스위치변경(false);\n                }}>상품설명</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"link-1\"onClick={()=>{\n                    누른탭변경(1);\n                    스위치변경(false);\n                }}>배송정보</Nav.Link>\n            </Nav.Item>\n            </Nav>\n                \n            <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n                <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\n            </CSSTransition>\n\n        </div> \n    )\n}\n\nfunction TabContent(props){\n\n    useEffect(()=>{\n        props.스위치변경(true);\n    })\n\n    if(props.누른탭 === 0){\n        return <div>0번째 내용입니다</div>\n    } else if(props.누른탭 === 1){\n        return <div>1번째 내용입니다</div>\n    } else if(props.누른탭 === 2){\n        return <div>2번째 내용입니다</div>\n    }\n}\n\nfunction Info(props){\n    return (\n        <p>재고 : {props.재고[0]}</p>\n    )\n}\n\nexport default Detail;","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nfunction Cart(props){\n    return (\n        <div>\n            <Table responsive=\"sm\">\n            <thead>\n            <tr>\n                <th>#</th>\n                <th>상품명</th>\n                <th>수량</th>\n                <th>변경</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>1</td>\n                <td>{ props.state[0].name }</td>\n                <td>{ props.state[0].quan }</td>\n                <td>Table cell</td>\n            </tr>\n            </tbody>\n        </Table>\n        </div>\n    )\n}\n\n//리덕스 사용방법 props 처럼 만들어줌!\nfunction stateToProps(state){\n    return {\n        // 상품명 : state[0].name\n        state : state\n    }\n}\n\nexport default connect(stateToProps)(Cart)\n\n// export default Cart;","/* eslint-disable */\n// CSS에 많은 시간을 들이지 말고 부트스트랩을 이용하여 시간을 단축\n// 컴포넌트들을 사용하기 위해서는 꼭 임포트를 해준다\nimport logo from './logo.svg';\nimport React, { useContext, useState } from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js'\nimport { Link, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport Cart from './Cart.js';\n\n\nlet 재고context = React.createContext();\n\nfunction App() {\n  // 데이터가 너무 길 경우 새로운 파일을 만들어서 임포트해서 가져온다\n  let [shoes, shoes변경] = useState(Data);\n  let [isLoading, isLoading변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n  \n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/* 중복 발생시 맨 위의 라우터만 나타내기 위해 스위치 사용 */}\n      {/* exact를 사용하면 \"/\"(슬래시)기호 한대만 있을때만 나타낸다 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>50% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          {/* 좌우 여백을 잡아줌 */}\n          {/* 부트스트랩 문법 \"row\" => 12개의 세로줄로 나눠줌 */}\n          <div className=\"container\">\n\n            <재고context.Provider value={재고}>\n            <div className=\"row\">\n              { // 컴포넌트화 시켜 반복문을 사용한다\n                shoes.map((shoe, i)=>{\n                  return (\n                    <Card shoes={ shoes[i] } key={ i } i={ i }/>\n                  )\n                })\n              }\n            </div>\n            </재고context.Provider>\n            <div><br/><br/>\n              <button className=\"btn btn-primary\" onClick={()=>{\n                isLoading변경(true);\n                axios.get('https://github.com/isz01122/shopping_mall/blob/master/shop/data2.json')\n                .then((result)=>{\n                  setTimeout(() => {\n                    shoes변경( [...shoes, ...result.data] );\n                    isLoading변경(false);;\n                  }, 1000);\n                })\n                .catch(()=>{\n                  isLoading변경(false);;\n                  console.log(\"fail\");\n                })\n              }}>더보기</button>\n              <br/><br/>\n              {\n                isLoading === true \n                ? (<Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n                </Spinner>) : null\n              }\n              <br/><br/><br/>\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Route>\n        \n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        {/* 모든 문자열을 의미함 */}\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 나타나는 페이지</div>\n        </Route>\n\n        \n\n\n      </Switch>\n    </div>\n  );\n}\n\n\n\n\n{/* 4개씩 차지하여 총합 12컬럼을 차지하는방법 => 즉, 3등분 */}\n{/* \"md\" => 모바일에서는 세로로 나타내줌 */}\nfunction Card(props){\n\n  let 재고 = useContext(재고context);\n\n  return (\n    <div className=\"col-md-4\">\n      <img src={ 'https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/shoes' + (props.i + 1) + '.jpg' } width=\"100%\" />\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } & { props.shoes.price }</p>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//라이브러리 임포트 방법 주로 \"./\" 기호가 없으면 라이브러리임\nimport { HashRouter } from 'react-router-dom';\n// 리덕스 사용방법!\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nlet store = createStore(()=>{ return [{ id : 0, name : '멋진신발', quan : 2 }] });\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}