{"version":3,"sources":["logo.svg","data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","찾은상품","connect","state","reducer","alert열렸니","reducer2","useState","alert","alert변경","누른탭변경","스위치","타이머","setTimeout","clearTimeout","useParams","shoes","find","상품","history","useHistory","className","src","width","onClick","arr","parseInt","재고변경","재고감소","dispatch","type","payload","name","quan","cartnum","undefined","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","xBntStyle","background","border","color","position","right","Table","responsive","map","a","i","데이터","style","Button","size","top","as","to","재고context","React","createContext","Card","useContext","App","Data","shoes변경","isLoading","isLoading변경","더보기","더보기변경","Navbar","bg","expand","Brand","exact","path","Jumbotron","Provider","value","shoe","axios","get","then","result","data","catch","console","log","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.870f5b29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\nexport default[\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n] ","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\n//useHistory라는 Hock을 사용하는 방법으로 뒤로가기를 구현\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport \"./Detail.scss\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\n// 컴포넌트에 직접 스타일 넣어서 스타일링 하기!\n// 클래스네임을 작성할 필요가 없음\nlet 박스 = styled.div`\n  padding: 20px;\n`;\n\nlet 제목 = styled.h4`\n  font-size: 25px;\n  color: ${(props) => props.색상};\n`;\n\nfunction Detail(props) {\n  let [alert, alert변경] = useState(true);\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  // 훅! 업데이트마다 실행된다\n  useEffect(() => {\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    }, 2000);\n    return () => {\n      clearTimeout(타이머);\n    }; //Detail컴포넌트가 사라질때 타이머를 제거한다\n  }, []); //대괄호 안에 조건을 넣어줌\n\n  // 라우터의 useParams훅! => 사용자가 입력한 URL파라미터들!\n  // /:id자리에 사용자가 입력한 값이 들어감\n  let { id } = useParams();\n  let 찾은상품 = props.shoes.find(function (상품) {\n    return 상품.id == id;\n  });\n  // 방문기록을 담고있는 Object이다\n  let history = useHistory();\n\n  function 재고감소(id) {\n    let arr = [...props.재고];\n    arr[id] = parseInt(arr[id]) - 1;\n    props.재고변경(arr);\n  }\n\n  return (\n    <div className=\"container\">\n      <박스>\n        <제목 className=\"red\">Detail</제목>\n      </박스>\n\n      {alert === true ? (\n        <div className=\"my-alert2\">\n          <p>재고가 얼마 남지 않았습니다.</p>\n        </div>\n      ) : null}\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src={\n              \"https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/shoes\" +\n              (찾은상품.id + 1) +\n              \".jpg\"\n            }\n            width=\"100%\"\n          />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}</p>\n          <Info 재고={props.재고} 찾은상품={찾은상품}></Info>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              재고감소(찾은상품.id);\n              props.dispatch({\n                type: \"항목추가\",\n                payload: {\n                  id: 찾은상품.id,\n                  name: 찾은상품.title,\n                  quan: 1,\n                  cartnum: undefined,\n                },\n              });\n              history.push(\"/cart\");\n            }}\n          >\n            주문하기\n          </button>\n          &nbsp;\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            뒤로가기\n          </button>\n          <br />\n          <br />\n          <br />\n        </div>\n      </div>\n\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item>\n          <Nav.Link\n            eventKey=\"link-0\"\n            onClick={() => {\n              누른탭변경(0);\n              스위치변경(false);\n            }}\n          >\n            상품설명\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link\n            eventKey=\"link-1\"\n            onClick={() => {\n              누른탭변경(1);\n              스위치변경(false);\n            }}\n          >\n            배송정보\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n      </CSSTransition>\n    </div>\n  );\n}\n\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n\n  if (props.누른탭 === 0) {\n    return <div>상품을 소개하는 페이지 입니다.</div>;\n  } else if (props.누른탭 === 1) {\n    return <div>배송 정보에 관한 페이지 입니다.</div>;\n  }\n}\n\nfunction Info(props) {\n  return <p>재고 : {props.재고[props.찾은상품.id]}</p>;\n}\n\n//리덕스 사용방법 props 처럼 만들어줌!\nfunction stateToProps(state) {\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2,\n  };\n}\n\nexport default connect(stateToProps)(Detail);\n\n// export default Detail;\n","import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst xBntStyle = {\n  background: \"transparent\",\n  border: \"0px\",\n  color: \"red\",\n  position: \"absolute\",\n  right: \"15px\",\n};\n\nfunction Cart(props) {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>순서</th>\n            <th>상품명</th>\n            <th>수량</th>\n            <th>변경</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.state.map((a, i) => {\n            return (\n              <tr key={i}>\n                <td>{a.cartnum}</td>\n                <td>{a.name}</td>\n                <td>{a.quan}</td>\n                <td>\n                  <button\n                    onClick={() => {\n                      props.dispatch({ type: \"수량감소\", 데이터: a.cartnum });\n                    }}\n                  >\n                    -\n                  </button>\n                  &nbsp;\n                  <button\n                    onClick={() => {\n                      props.dispatch({ type: \"수량증가\", 데이터: a.cartnum });\n                    }}\n                  >\n                    +\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {props.alert열렸니 === true ? (\n        <div className=\"my-alert2\">\n          <p>\n            지금 구매하면 특가할인 20%\n            <button\n              onClick={() => {\n                props.dispatch({ type: \"alert닫기\" });\n              }}\n              style={xBntStyle}\n            >\n              X\n            </button>\n          </p>\n        </div>\n      ) : null}\n      <Button\n        variant=\"primary\"\n        size=\"lg\"\n        style={{ position: \"relative\", top: \"130px\" }}\n        onClick={() => {\n          alert(\"구매완료!\");\n        }}\n      >\n        즉시 구매하기\n      </Button>\n      &nbsp;\n      <Button\n        variant=\"primary\"\n        size=\"lg\"\n        style={{ position: \"relative\", top: \"130px\" }}\n        as={Link}\n        to=\"/\"\n      >\n        계속 쇼핑하기\n      </Button>\n    </div>\n  );\n}\n\n//리덕스 사용방법 props 처럼 만들어줌!\nfunction stateToProps(state) {\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2,\n  };\n}\n\nexport default connect(stateToProps)(Cart);\n\n// export default Cart;\n","/* eslint-disable */\n// CSS에 많은 시간을 들이지 말고 부트스트랩을 이용하여 시간을 단축\n// 컴포넌트들을 사용하기 위해서는 꼭 임포트를 해준다\nimport logo from \"./logo.svg\";\nimport React, { useContext, useState } from \"react\";\nimport { Navbar, Nav, Button, Jumbotron, Spinner } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Data from \"./data.js\";\nimport Detail from \"./Detail.js\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cart from \"./Cart.js\";\n\nlet 재고context = React.createContext();\n\nfunction App() {\n  // 데이터가 너무 길 경우 새로운 파일을 만들어서 임포트해서 가져온다\n  let [shoes, shoes변경] = useState(Data);\n  let [isLoading, isLoading변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12, 13, 14, 15]);\n  let [더보기, 더보기변경] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">\n          신발SHOP\n        </Navbar.Brand>\n        <Nav.Link as={Link} to=\"/cart\">\n          장바구니\n        </Nav.Link>\n      </Navbar>\n\n      {/* 중복 발생시 맨 위의 라우터만 나타내기 위해 스위치 사용 */}\n      {/* exact를 사용하면 \"/\"(슬래시)기호 한대만 있을때만 나타낸다 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>50% Season Off</h1>\n            <p>\n              This is a simple page, React JS Fundamentals Shopping Mall 2020.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          {/* 좌우 여백을 잡아줌 */}\n          {/* 부트스트랩 문법 \"row\" => 12개의 세로줄로 나눠줌 */}\n          <div className=\"container\">\n            <재고context.Provider value={재고}>\n              <div className=\"row\">\n                {\n                  // 컴포넌트화 시켜 반복문을 사용한다\n                  shoes.map((shoe, i) => {\n                    return <Card shoes={shoes[i]} key={i} i={i} />;\n                  })\n                }\n              </div>\n            </재고context.Provider>\n            <div>\n              <br />\n              <br />\n              {더보기 === true ? (\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    isLoading변경(true);\n                    axios\n                      .get(\n                        \"https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/data2.json\"\n                      )\n                      .then((result) => {\n                        setTimeout(() => {\n                          shoes변경([...shoes, ...result.data]);\n                          isLoading변경(false);\n                          더보기변경(false);\n                        }, 500);\n                      })\n                      .catch(() => {\n                        isLoading변경(false);\n                        console.log(\"fail\");\n                      });\n                  }}\n                >\n                  더보기\n                </button>\n              ) : null}\n              <br />\n              <br />\n              {isLoading === true ? (\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              ) : null}\n              <br />\n              <br />\n              <br />\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        {/* 모든 문자열을 의미함 */}\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 나타나는 페이지</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n{\n  /* 4개씩 차지하여 총합 12컬럼을 차지하는방법 => 즉, 3등분 */\n}\n{\n  /* \"md\" => 모바일에서는 세로로 나타내줌 */\n}\nfunction Card(props) {\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.shoes.id);\n      }}\n    >\n      <img\n        src={\n          \"https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/shoes\" +\n          (props.i + 1) +\n          \".jpg\"\n        }\n        width=\"100%\"\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} & {props.shoes.price}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//라이브러리 임포트 방법 주로 \"./\" 기호가 없으면 라이브러리임\nimport { HashRouter } from \"react-router-dom\";\n// 리덕스 사용방법!\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === \"alert닫기\") {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\n\nlet 초기값 = [];\n\n//데이터 수정하는 방법을 담을 함수\nfunction reducer(state = 초기값, 액션) {\n  if (액션.type === \"항목추가\") {\n    let found = state.findIndex((a) => {\n      return a.id === 액션.payload.id;\n    });\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      액션.payload.cartnum = state.length;\n      copy.push(액션.payload);\n      return copy;\n    }\n  }\n  if (액션.type === \"수량증가\") {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy;\n  } else if (액션.type === \"수량감소\") {\n    let copy = [...state];\n    if (copy[액션.데이터].quan > 0) {\n      copy[액션.데이터].quan--;\n    }\n    return copy;\n  } else {\n    return state;\n  }\n}\n//리덕스 스토어!\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <HashRouter>\n    {/* 리덕스로 값을 공유할 부분을 프로바이더로 감싼다 */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}