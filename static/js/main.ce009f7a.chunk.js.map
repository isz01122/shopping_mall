{"version":3,"sources":["logo.svg","data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열렸니","reducer2","useState","alert","alert변경","누른탭변경","스위치","타이머","setTimeout","clearTimeout","useParams","찾은상품","shoes","find","상품","history","useHistory","className","src","width","onClick","재고변경","dispatch","type","payload","name","quan","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","xBntStyle","background","border","position","left","Table","responsive","map","a","i","데이터","style","재고context","React","createContext","Card","useContext","App","Data","shoes변경","isLoading","isLoading변경","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","as","to","exact","path","Jumbotron","Button","Provider","value","shoe","axios","get","then","result","data","catch","console","log","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce009f7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\nexport default[\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n] ","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\n//useHistory라는 Hock을 사용하는 방법으로 뒤로가기를 구현\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Nav } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport \"./Detail.scss\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\n// 컴포넌트에 직접 스타일 넣어서 스타일링 하기!\n// 클래스네임을 작성할 필요가 없음\nlet 박스 = styled.div`\n  padding: 20px;\n`;\n\nlet 제목 = styled.h4`\n  font-size: 25px;\n  color: ${(props) => props.색상};\n`;\n\nfunction Detail(props) {\n  let [alert, alert변경] = useState(true);\n  let [inputData, inputData변경] = useState(\"\");\n\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  // 훅! 업데이트마다 실행된다\n  useEffect(() => {\n    let 타이머 = setTimeout(() => {\n      alert변경(false);\n    }, 2000);\n    return () => {\n      clearTimeout(타이머);\n    }; //Detail컴포넌트가 사라질때 타이머를 제거한다\n  }, []); //대괄호 안에 조건을 넣어줌\n\n  // 라우터의 useParams훅! => 사용자가 입력한 URL파라미터들!\n  // /:id자리에 사용자가 입력한 값이 들어감\n  let { id } = useParams();\n  let 찾은상품 = props.shoes.find(function (상품) {\n    return 상품.id == id;\n  });\n  // 방문기록을 담고있는 Object이다\n  let history = useHistory();\n\n  return (\n    <div className=\"container\">\n      <박스>\n        <제목 className=\"red\">Detail</제목>\n      </박스>\n\n      {alert === true ? (\n        <div className=\"my-alert2\">\n          <p>재고가 얼마 남지 않았습니다.</p>\n        </div>\n      ) : null}\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src={\n              \"https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/shoes\" +\n              (찾은상품.id + 1) +\n              \".jpg\"\n            }\n            width=\"100%\"\n          />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}</p>\n          <Info 재고={props.재고}></Info>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              props.재고변경([9, 10, 11]);\n              props.dispatch({\n                type: \"항목추가\",\n                payload: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\n              });\n              history.push(\"/cart\");\n            }}\n          >\n            주문하기\n          </button>\n          &nbsp;\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              history.goBack();\n            }}\n          >\n            뒤로가기\n          </button>\n          <br />\n          <br />\n          <br />\n        </div>\n      </div>\n\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n        <Nav.Item>\n          <Nav.Link\n            eventKey=\"link-0\"\n            onClick={() => {\n              누른탭변경(0);\n              스위치변경(false);\n            }}\n          >\n            상품설명\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link\n            eventKey=\"link-1\"\n            onClick={() => {\n              누른탭변경(1);\n              스위치변경(false);\n            }}\n          >\n            배송정보\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\n      </CSSTransition>\n    </div>\n  );\n}\n\nfunction TabContent(props) {\n  useEffect(() => {\n    props.스위치변경(true);\n  });\n\n  if (props.누른탭 === 0) {\n    return <div>0번째 내용입니다</div>;\n  } else if (props.누른탭 === 1) {\n    return <div>1번째 내용입니다</div>;\n  } else if (props.누른탭 === 2) {\n    return <div>2번째 내용입니다</div>;\n  }\n}\n\nfunction Info(props) {\n  return <p>재고 : {props.재고[0]}</p>;\n}\n\n//리덕스 사용방법 props 처럼 만들어줌!\nfunction stateToProps(state) {\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2,\n  };\n}\n\nexport default connect(stateToProps)(Detail);\n\n// export default Detail;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nconst xBntStyle = {\n  background: \"transparent\",\n  border: \"transparent\",\n  position: \"relative\",\n  left: \"130px\",\n};\n\nfunction Cart(props) {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>순서</th>\n            <th>상품명</th>\n            <th>수량</th>\n            <th>변경</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.state.map((a, i) => {\n            return (\n              <tr key={i}>\n                <td>{a.id}</td>\n                <td>{a.name}</td>\n                <td>{a.quan}</td>\n                <td>\n                  <button\n                    onClick={() => {\n                      props.dispatch({ type: \"수량감소\", 데이터: a.id });\n                    }}\n                  >\n                    -\n                  </button>\n                  &nbsp;\n                  <button\n                    onClick={() => {\n                      props.dispatch({ type: \"수량증가\", 데이터: a.id });\n                    }}\n                  >\n                    +\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {props.alert열렸니 === true ? (\n        <div className=\"my-alert2\">\n          <p>\n            지금 구매하면 특가할인 20%\n            <button\n              onClick={() => {\n                props.dispatch({ type: \"alert닫기\" });\n              }}\n              style={xBntStyle}\n            >\n              X\n            </button>\n          </p>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\n//리덕스 사용방법 props 처럼 만들어줌!\nfunction stateToProps(state) {\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2,\n  };\n}\n\nexport default connect(stateToProps)(Cart);\n\n// export default Cart;\n","/* eslint-disable */\n// CSS에 많은 시간을 들이지 말고 부트스트랩을 이용하여 시간을 단축\n// 컴포넌트들을 사용하기 위해서는 꼭 임포트를 해준다\nimport logo from \"./logo.svg\";\nimport React, { useContext, useState } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Button,\n  Jumbotron,\n  Spinner,\n} from \"react-bootstrap\";\nimport \"./App.css\";\nimport Data from \"./data.js\";\nimport Detail from \"./Detail.js\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cart from \"./Cart.js\";\n\nlet 재고context = React.createContext();\n\nfunction App() {\n  // 데이터가 너무 길 경우 새로운 파일을 만들어서 임포트해서 가져온다\n  let [shoes, shoes변경] = useState(Data);\n  let [isLoading, isLoading변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand>ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/cart\">\n              장바구니\n            </Nav.Link>\n            {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown> */}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/* 중복 발생시 맨 위의 라우터만 나타내기 위해 스위치 사용 */}\n      {/* exact를 사용하면 \"/\"(슬래시)기호 한대만 있을때만 나타낸다 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>50% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          {/* 좌우 여백을 잡아줌 */}\n          {/* 부트스트랩 문법 \"row\" => 12개의 세로줄로 나눠줌 */}\n          <div className=\"container\">\n            <재고context.Provider value={재고}>\n              <div className=\"row\">\n                {\n                  // 컴포넌트화 시켜 반복문을 사용한다\n                  shoes.map((shoe, i) => {\n                    return <Card shoes={shoes[i]} key={i} i={i} />;\n                  })\n                }\n              </div>\n            </재고context.Provider>\n            <div>\n              <br />\n              <br />\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  isLoading변경(true);\n                  axios\n                    .get(\n                      \"https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/data2.json\"\n                    )\n                    .then((result) => {\n                      setTimeout(() => {\n                        shoes변경([...shoes, ...result.data]);\n                        isLoading변경(false);\n                      }, 1000);\n                    })\n                    .catch(() => {\n                      isLoading변경(false);\n                      console.log(\"fail\");\n                    });\n                }}\n              >\n                더보기\n              </button>\n              <br />\n              <br />\n              {isLoading === true ? (\n                <Spinner animation=\"border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              ) : null}\n              <br />\n              <br />\n              <br />\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        {/* 모든 문자열을 의미함 */}\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 나타나는 페이지</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n{\n  /* 4개씩 차지하여 총합 12컬럼을 차지하는방법 => 즉, 3등분 */\n}\n{\n  /* \"md\" => 모바일에서는 세로로 나타내줌 */\n}\nfunction Card(props) {\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.shoes.id);\n      }}\n    >\n      <img\n        src={\n          \"https://raw.githubusercontent.com/isz01122/shopping_mall/master/shop/shoes\" +\n          (props.i + 1) +\n          \".jpg\"\n        }\n        width=\"100%\"\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} & {props.shoes.price}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM, { unstable_renderSubtreeIntoContainer } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//라이브러리 임포트 방법 주로 \"./\" 기호가 없으면 라이브러리임\nimport { HashRouter } from \"react-router-dom\";\n// 리덕스 사용방법!\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === \"alert닫기\") {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\n\nlet 초기값 = [\n  { id: 0, name: \"White and Black\", quan: 2 },\n  { id: 1, name: \"Red Knit\", quan: 3 },\n];\n\n//데이터 수정하는 방법을 담을 함수\nfunction reducer(state = 초기값, 액션) {\n  if (액션.type === \"항목추가\") {\n    let found = state.findIndex((a) => {\n      return a.id === 액션.payload.id;\n    });\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(액션.payload);\n      return copy;\n    }\n  }\n  if (액션.type === \"수량증가\") {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy;\n  } else if (액션.type === \"수량감소\") {\n    let copy = [...state];\n    if (copy[액션.데이터].quan > 0) {\n      copy[액션.데이터].quan--;\n    }\n    return copy;\n  } else {\n    return state;\n  }\n}\n//리덕스 스토어!\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <HashRouter>\n    {/* 리덕스로 값을 공유할 부분을 프로바이더로 감싼다 */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}