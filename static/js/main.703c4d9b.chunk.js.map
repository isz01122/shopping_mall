{"version":3,"sources":["logo.svg","data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Info","재고","Detail","useState","alert","alert변경","useEffect","타이머","setTimeout","clearTimeout","useParams","찾은상품","shoes","find","상품","history","useHistory","className","src","width","onClick","재고변경","goBack","Card","i","App","Data","shoes변경","isLoading","isLoading변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","shoe","axios","get","then","result","data","catch","console","log","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.703c4d9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\nexport default[\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n] ","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n//useHistory라는 Hock을 사용하는 방법으로 뒤로가기를 구현\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\n\n// 컴포넌트에 직접 스타일 넣어서 스타일링 하기!\n// 클래스네임을 작성할 필요가 없음\nlet 박스 = styled.div`\n    padding:20px;\n`;\n\nlet 제목 = styled.h4`\n    font-size:25px;\n    color : ${ props => props.색상 }\n`;\n\nfunction Detail(props){\n\n    let [alert, alert변경] = useState(true);\n    let [inputData, inputData변경] = useState('');\n\n    // 훅! 업데이트마다 실행된다\n    useEffect(()=>{\n        let 타이머 = setTimeout(() => {\n            alert변경(false)\n        }, 2000);\n        return ()=>{ clearTimeout(타이머) } //Detail컴포넌트가 사라질때 타이머를 제거한다\n    },[]); //대괄호 안에 조건을 넣어줌\n\n\n    // 라우터의 useParams훅! => 사용자가 입력한 URL파라미터들!\n    // /:id자리에 사용자가 입력한 값이 들어감 \n    let { id } = useParams();\n    let 찾은상품 = props.shoes.find(function(상품){\n        return 상품.id == id;\n    })\n    // 방문기록을 담고있는 Object이다\n    let history = useHistory();\n\n    return (\n        <div className=\"container\">\n            <박스>\n                <제목 className=\"red\">Detail</제목>\n            </박스>\n\n            {\n                alert === true \n                ? (<div className=\"my-alert2\">\n                <p>재고가 얼마 남지 않았습니다.</p>\n                </div>) : null\n            }\n            \n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <img src={ 'https://codingapple1.github.io/shop/shoes' + (찾은상품.id+1) +'.jpg' } width=\"100%\" />\n                </div>\n                <div className=\"col-md-6 mt-4\">\n                    <h4 className=\"pt-5\">{찾은상품.title}</h4>\n                    <p>{찾은상품.content}</p>\n                    <p>{찾은상품.price}</p>\n                    \n                    <Info 재고={props.재고}></Info>\n\n                    <button className=\"btn btn-danger\" onClick={()=>{\n                        props.재고변경([9,10,11]);\n                    }}>주문하기</button>\n                    &nbsp; \n                    <button className=\"btn btn-danger\" onClick={()=>{\n                        history.goBack();\n                    }}>뒤로가기</button> \n                </div>\n            </div>\n        </div> \n    )\n}\n\nfunction Info(props){\n    return (\n        <p>재고 : {props.재고[0]}</p>\n    )\n}\n\nexport default Detail;","/* eslint-disable */\n// CSS에 많은 시간을 들이지 말고 부트스트랩을 이용하여 시간을 단축\n// 컴포넌트들을 사용하기 위해서는 꼭 임포트를 해준다\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js'\nimport { Link, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction App() {\n  // 데이터가 너무 길 경우 새로운 파일을 만들어서 임포트해서 가져온다\n  let [shoes, shoes변경] = useState(Data);\n  let [isLoading, isLoading변경] = useState(false);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n  \n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/* 중복 발생시 맨 위의 라우터만 나타내기 위해 스위치 사용 */}\n      {/* exact를 사용하면 \"/\"(슬래시)기호 한대만 있을때만 나타낸다 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>50% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          {/* 좌우 여백을 잡아줌 */}\n          {/* 부트스트랩 문법 \"row\" => 12개의 세로줄로 나눠줌 */}\n          <div className=\"container\">\n            <div className=\"row\">\n              { // 컴포넌트화 시켜 반복문을 사용한다\n                shoes.map((shoe, i)=>{\n                  return (\n                    <Card shoes={ shoes[i] } key={ i } i={ i }/>\n                  )\n                })\n              }\n            </div>\n            <div><br/><br/>\n              <button className=\"btn btn-primary\" onClick={()=>{\n                isLoading변경(true);\n                axios.get('https://codingapple1.github.io/shop/data2.json')\n                .then((result)=>{\n                  setTimeout(() => {\n                    shoes변경( [...shoes, ...result.data] );\n                    isLoading변경(false);;\n                  }, 1000);\n                })\n                .catch(()=>{\n                  isLoading변경(false);;\n                  console.log(\"fail\");\n                })\n              }}>더보기</button>\n              <br/><br/>\n              {\n                isLoading === true \n                ? (<Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n                </Spinner>) : null\n              }\n              <br/><br/><br/>\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Route>\n        \n        {/* 모든 문자열을 의미함 */}\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 나타나는 페이지</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n\n\n\n{/* 4개씩 차지하여 총합 12컬럼을 차지하는방법 => 즉, 3등분 */}\n{/* \"md\" => 모바일에서는 세로로 나타내줌 */}\nfunction Card(props){\n  return (\n    <div className=\"col-md-4\">\n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg' } width=\"100%\" />\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } & { props.shoes.price }</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//라이브러리 임포트 방법 주로 \"./\" 기호가 없으면 라이브러리임\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}